// 1. Выведется в консоль true, так как изменение конструктора никак не меняет уже созданные объекты
// 2. Аналогичная ситуация, выведется - true
// 3. А вот теперь мы меняем сам объект, поэтому в этот раз - undefined
// 4. Тут мы опять меняем конструктор, а не сам объект => true

// Посмотрел ответы. Я ошибся. Попробую переосознать

// 1. true => дело в том, что в [[Prototype]] останется ссылка на тот объект, который был при инициализации объекта
// 2. false => Тут меняется сам объект из prototype Constructor, на который ссылается наш object. При изменение его свойства меняется и вывод у нас.
// 3. true => мы удаляем свойства, которого и так нет. Мы берем его из объекта прототипа
// 4. undefined => мы удаляем необходимое свойство, на которое ссылается объект в [[Prototype]]
